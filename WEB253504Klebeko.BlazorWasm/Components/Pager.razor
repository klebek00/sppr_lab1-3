@namespace WEB253504Klebeko.BlazorWasm.Components
@inject IDataService DataService

@if (DataService.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item @(DataService.CurrentPage == 1 ? "disabled" : "")">
                <button class="page-link" @onclick="() => SelectPage(DataService.CurrentPage - 1)"
                        disabled="@(DataService.CurrentPage == 1)">
                    «
                </button>
            </li>

            @for (int page = 1; page <= DataService.TotalPages; page++)
            {
                int currentPage = page;
                <li class="page-item @(DataService.CurrentPage == currentPage ? "active" : "")">
                    <button class="page-link" @onclick="() => SelectPage(currentPage)">
                        @currentPage
                    </button>
                </li>
            }

            <li class="page-item @(DataService.CurrentPage == DataService.TotalPages ? "disabled" : "")">
                <button class="page-link" @onclick="() => SelectPage(DataService.CurrentPage + 1)"
                        disabled="@(DataService.CurrentPage == DataService.TotalPages)">
                    »
                </button>
            </li>
        </ul>
    </nav>
}

@implements IDisposable

@code {
    protected override void OnInitialized()
    {
        DataService.DataLoaded += StateHasChanged;
    }

    private async Task SelectPage(int page)
    {
        DataService.CurrentPage = page;
        await DataService.GetProductListAsync(page);
    }

    public void Dispose()
    {
        DataService.DataLoaded -= StateHasChanged;
    }
}